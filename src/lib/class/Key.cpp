/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Key.cpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jodufour <jodufour@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/02/24 01:09:17 by jodufour          #+#    #+#             */
/*   Updated: 2024/02/24 01:16:26 by jodufour         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "class/Key.hpp"
#include "abnf_components.hpp"

// ****************************************************************************************************************** //
//                                                    Constructors                                                    //
// ****************************************************************************************************************** //
/**
 * @param key The key to initialize the instance with.
 */
Key::Key(std::string const &key) : std::string(key) {}

// ****************************************************************************************************************** //
//                                                     Destructor                                                     //
// ****************************************************************************************************************** //
Key::~Key(void) {}

// ***************************************************************************************************************** //
//                                                      Methods                                                      //
// ***************************************************************************************************************** //
/**
 * @brief Checks whether the key is valid.
 *
 * @return `true` if the key is valid, `false` otherwise.
 */
bool Key::is_valid(void) const
{
	return lfcrspcl.find(*this->begin()) == std::string::npos && this->find_first_of(lfcrsp, 1) == std::string::npos;
}
